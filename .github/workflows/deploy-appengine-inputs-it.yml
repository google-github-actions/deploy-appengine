name: deploy-appengine Inputs Tests

on:
  push:
    branches:
    - 'main'
  pull_request:

jobs:
  flags:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with flags
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: google-github-actions/setup-gcloud@main
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        service_account_key: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}
    - name: create app
      run: |-
        mkdir app
        cat <<EOF > ${{ github.workspace }}/app/app.yaml
        service: "${{ github.job }}-${{ github.run_number }}"
        runtime: "nodejs10"
        EOF

        cat <<EOF > ${{ github.workspace }}/app/server.js
        const http = require('http');
        const server = http.createServer(function (req, res) {
          res.writeHead(200)
          res.end('Hello world!');
        });
        server.listen(process.env.PORT || 8080);
        EOF
    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build
    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        working_directory: app/
        flags: --log-http --verbosity=debug
    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300
    - name: Clean Up
      if: ${{ always() }}
      run: |-
        gcloud app services delete "${{ github.job }}-${{ github.run_number }}" \
          --quiet \
          --project="${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}"

  bad-input:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with bad inputs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build

    - name: Deploy fails with no credentials
      id: test2
      uses: ./
      continue-on-error: true
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        working_directory: ${{ github.workspace }}/example-app/
    - name: Catch failure
      run: |-
        if [ ${{ steps.test2.outcome }} != 'failure' ]; then exit 1; fi

    # unset project id set by previous deploy
    - run: |-
        gcloud config unset project

    - uses: google-github-actions/setup-gcloud@main
      with:
        service_account_key: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}

    - name: Deploy fails with no project Id
      id: test1
      uses: ./
      continue-on-error: true
      with:
        working_directory: ${{ github.workspace }}/example-app/
    - name: Catch failure
      run: |-
        if [ ${{ steps.test1.outcome }} != 'failure' ]; then exit 1; fi
