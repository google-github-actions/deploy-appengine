name: deploy-appengine Credentials Integration

on: [push, pull_request]

jobs:
  gcloud:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
    name: with setup-gcloud
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        service_account_key: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}
        export_default_credentials: true
    - name: create app
      run: |-
        cat <<EOF > ${{ github.workspace }}/app.yaml
        service: "${{ github.job }}-${{ github.run_number }}"
        runtime: "nodejs10"
        EOF

        cat <<EOF > ${{ github.workspace }}/server.js
        const http = require('http');
        const server = http.createServer(function (req, res) {
          res.writeHead(200)
          res.end('Hello world!');
        });
        server.listen(process.env.PORT || 8080);
        EOF
    - name: Build dependency
      working-directory: setupGcloudSDK
      run: |-
        npm install
        npm run build
    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build
    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        version: gcloud
        promote: false
    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300
    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet

  b64-json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
    name: with base64 json creds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create app
      run: |-
        cat <<EOF > ${{ github.workspace }}/app.yaml
        service: "${{ github.job }}-${{ github.run_number }}"
        runtime: "nodejs10"
        EOF

        cat <<EOF > ${{ github.workspace }}/server.js
        const http = require('http');
        const server = http.createServer(function (req, res) {
          res.writeHead(200)
          res.end('Hello world!');
        });
        server.listen(process.env.PORT || 8080);
        EOF
    - name: Build dependency
      working-directory: setupGcloudSDK
      run: |-
        npm install
        npm run build
    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build
    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        credentials: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_B64 }}
        version: b64-json
        promote: false # Allows for deletion
    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300
    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet

  json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name }}
    name: with json creds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: create app
      run: |-
        cat <<EOF > ${{ github.workspace }}/app.yaml
        service: "${{ github.job }}-${{ github.run_number }}"
        runtime: "nodejs10"
        EOF

        cat <<EOF > ${{ github.workspace }}/server.js
        const http = require('http');
        const server = http.createServer(function (req, res) {
          res.writeHead(200)
          res.end('Hello world!');
        });
        server.listen(process.env.PORT || 8080);
        EOF
    - name: Build dependency
      working-directory: setupGcloudSDK
      run: |-
        npm install
        npm run build
    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build
    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        credentials: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}
        version: json
        promote: false # Allows for deletion
    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300
    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet
