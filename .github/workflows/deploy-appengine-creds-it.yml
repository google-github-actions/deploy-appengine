name: deploy-appengine Credentials Integration

on:
  push:
    branches:
    - 'main'
  pull_request:

jobs:
  gcloud:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with setup-gcloud
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        service_account_key: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}

    - name: Update app.yaml
      run: |-
        echo "service: ${{ github.job }}-${{ github.run_number }}" >> ${{ github.workspace }}/example-app/app.yaml

    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build

    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        version: gcloud
        promote: false
        working_directory: ${{ github.workspace }}/example-app/

    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300

    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet

  gcloud2:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with setup-gcloud - no project Id
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}

    - name: Update app.yaml
      run: |-
        echo "service: ${{ github.job }}-${{ github.run_number }}" >> ${{ github.workspace }}/example-app/app.yaml

    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build

    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        project_id: ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}
        version: gcloud
        promote: false
        working_directory: ${{ github.workspace }}/example-app/

    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300

    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet --project ${{ secrets.APPENGINE_DEPLOY_PROJECT_ID }}

  b64-json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with base64 json creds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update app.yaml
      run: |-
        echo "service: ${{ github.job }}-${{ github.run_number }}" >> ${{ github.workspace }}/example-app/app.yaml

    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build

    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        credentials: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_B64 }}
        version: b64-json
        promote: false # Allows for deletion
        working_directory: ${{ github.workspace }}/example-app/

    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300
    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet

  json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: with json creds
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Update app.yaml
      run: |-
        echo "service: ${{ github.job }}-${{ github.run_number }}" >> ${{ github.workspace }}/example-app/app.yaml

    - id: build
      name: Build dist
      run: |-
        npm install
        npm run build

    - id: deploy
      name: Deploy to App Engine
      uses: ./
      with:
        credentials: ${{ secrets.APPENGINE_DEPLOY_SA_KEY_JSON }}
        version: json
        promote: false # Allows for deletion
        working_directory: ${{ github.workspace }}/example-app/

    - name: Test Output
      run: |-
        curl '${{ steps.deploy.outputs.url }}' \
          --silent \
          --fail \
          --location \
          --retry 5 \
          --retry-connrefused \
          --retry-delay 5 \
          --retry-max-time 300

    - name: Clean Up
      if: ${{ always() }}
      run: gcloud app services delete "${{ github.job }}-${{ github.run_number }}" --quiet
