name: 'Deploy to App Engine'
author: 'Google LLC'
description: |-
  Deploy and promote a new service to Google App Engine.

inputs:
  project_id:
    description: |-
      ID of the Google Cloud project. If not provided, this is inherited from
      the environment.
    required: false

  working_directory:
    description: |-
      The working directory to use. **GitHub Actions do not honor [default
      working-directory
      settings](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#defaultsrun).**
      The `deliverables` input is a relative path based on this setting.
    required: false

  deliverables:
    description: |-
      The [yaml
      files](https://cloud.google.com/appengine/docs/standard/nodejs/configuration-files#optional_configuration_files)
      for the services or configurations you want to deploy. If not given,
      defaults to app.yaml in the current directory. If that is not found,
      attempts to automatically generate necessary configuration files (such as
      app.yaml) in the current directory (example, `app.yaml cron.yaml`).

      Note: The additional deliverables may require additional roles for your
      service account user.
    required: false

  build_env_vars:
    description: |-
      List of build environment variables that should be set in the build
      environment. These are comma-separated or newline-separated `KEY=VALUE`.
      Keys or values that contain separators must be escaped with a backslash
      (e.g. `\,` or `\\n`) unless quoted. Any leading or trailing whitespace is
      trimmed unless values are quoted.

      ```yaml
      build_env_vars: |-
        FRUIT=apple
        SENTENCE=" this will retain leading and trailing spaces "
      ```

      This value will only be set if the input is a non-empty value. If a
      non-empty value is given, the field values will be overwritten (not
      merged). To remove all values, set the value to the literal string `{}`.

      To include build environment variables defined in another file, use the
      [`includes` directive][includes-directive] in your `app.yaml`.

      This will overwrite any duplicate key environment variables defined in the
      `app.yaml`.
    required: false

  env_vars:
    description: |-
      List of environment variables that should be set in the environment. These
      are comma-separated or newline-separated `KEY=VALUE`. Keys or values that
      contain separators must be escaped with a backslash (e.g. `\,` or `\\n`)
      unless quoted. Any leading or trailing whitespace is trimmed unless values
      are quoted.

      ```yaml
      env_vars: |-
        FRUIT=apple
        SENTENCE=" this will retain leading and trailing spaces "
      ```

      This value will only be set if the input is a non-empty value. If a
      non-empty value is given, the field values will be overwritten (not
      merged). To remove all values, set the value to the literal string `{}`.

      To include environment variables defined in another file, use the
      [`includes` directive][includes-directive] in your `app.yaml`.

      This will overwrite any duplicate key environment variables defined in the
      `app.yaml`.
    required: false

  image_url:
    description: |-
      Fully-qualified name
      of the container image to deploy. For example:

          us-docker.pkg.dev/cloudrun/container/hello:latest

      or

          us-docker.pkg.dev/my-project/my-container/image:1.2.3
    required: false

  version:
    description: |-
      The version of the app that will be created or replaced by this
      deployment. If you do not specify a version, one will be generated for
      you.
    required: false

  promote:
    description: |-
      Promote the deployed version to receive all traffic.
    required: false
    default: 'true'

  flags:
    description: |-
      Space separate list of additional Cloud Functions flags to pass to the
      deploy command. This can be used to apply advanced features that are not
      exposed via this GitHub Action.

      ```yaml
      with:
        flags: '--ignore-file=...'
      ```

      Flags that include other flags must quote the _entire_ outer flag value. For
      example, to pass `--args=-X=123`:

      ```yaml
      with:
        flags: 'flags: '--ignore-file=...' "--args=-X=123"'
      ```

      See the [complete list of
      flags](https://cloud.google.com/sdk/gcloud/reference/app/deploy#FLAGS) for
      more information.

      Please note, this GitHub Action does not parse or validate the flags. You
      are responsible for making sure the flags are available on the gcloud
      version and subcommand.
    required: false

  gcloud_version:
    description: |-
      Version of the Cloud SDK to install. If unspecified or set to "latest",
      the latest available gcloud SDK version for the target platform will be
      installed. Example: "290.0.1".
    required: false

  gcloud_component:
    description: |-
      Version of the Cloud SDK components to install and use. If unspecified,
      the latest or released version will be used. This is the equivalent of
      running 'gcloud alpha COMMAND' or 'gcloud beta COMMAND'. Valid values are
      `alpha` or `beta`. The default value is to use the stable track.
    required: false

outputs:
  name:
    description: |-
      The fully-qualified resource name of the deployment. This will be of the
      format `apps/[PROJECT]/services/[SERVICE]/versions/[VERSION]`.

  runtime:
    description: |-
      The computed deployment runtime.

  service_account_email:
    description: |-
      The email address of the runtime service account.

  serving_status:
    description: |-
      The current serving status. The value is usually "SERVING", unless the
      deployment failed to start.

  version_id:
    description: |-
      Unique identifier for the version, or the specified version if one was
      given.

  version_url:
    description: |-
      URL of the version of the AppEngine service that was deployed.

branding:
  icon: 'code'
  color: 'blue'

runs:
  using: 'node24'
  main: 'dist/main/index.js'
